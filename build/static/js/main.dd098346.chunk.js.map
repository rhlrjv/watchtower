{"version":3,"sources":["ServiceTile/ServiceTile.js","Monitor/Monitor.js","App.js","index.js"],"names":["STATUS","unknown","healthy","unhealthy","ServiceTile","_ref","details","pollingInterval","_useState","useState","_useState2","Object","slicedToArray","status","setStatus","refreshServiceStatus","console","log","name","onFailure","error","fetch","url","method","mode","credentials","then","result","catch","useEffect","interval","window","setInterval","clearInterval","react_default","a","createElement","className","Monitor","config","title","services","map","service","index","src_ServiceTile_ServiceTile","key","pollingIntervalInMins","DEFAULT_CONFIG","App","configPath","setConfig","res","json","response","objectSpread","src_Monitor_Monitor","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"0QAGMA,qBAAS,CACbC,QAAS,UACTC,QAAS,UACTC,UAAW,cAiDEC,EA9CK,SAAAC,GAAgC,IAA9BC,EAA8BD,EAA9BC,QAASC,EAAqBF,EAArBE,gBAAqBC,EACtBC,mBAAST,EAAOC,SADMS,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3CK,EAD2CH,EAAA,GACnCI,EADmCJ,EAAA,GAGlD,SAASK,IACPC,QAAQC,IAAI,iCAAmCX,EAAQY,MAEvD,IAIMC,EAAY,SAACC,GACjBJ,QAAQC,IAAI,4CAA8CX,EAAQY,MAClEF,QAAQC,IAAI,UAAYG,GACxBN,EAAUd,EAAOG,YAEnBkB,MAAMf,EAAQgB,IAAK,CAACC,OAAQjB,EAAQiB,OAAQC,KAAM,UAAWC,YAAa,SACvEC,KAVe,SAACC,GACjBX,QAAQC,IAAI,0CAA4CX,EAAQY,MAChEJ,EAAUd,EAAOE,UAQAiB,GAChBS,MAAMT,GAaX,OAVAU,oBAAU,WACRd,IAEA,IAAMe,EAAWC,OAAOC,YAAY,WAClCjB,KACmB,GAAlBR,EAAuB,KAE1B,OAAO,kBAAMwB,OAAOE,cAAcH,KACjC,CAACxB,IAGF4B,EAAAC,EAAAC,cAAA,OAAKC,UACH,gBACGxB,IAAWb,EAAOE,QAAU,yBAA2B,KACvDW,IAAWb,EAAOG,UAAY,2BAA6B,KAE9D+B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZ/B,EAAQY,MAEXgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZ/B,EAAQgB,OC5BFgB,EAjBC,SAAAjC,GAAc,IAAZkC,EAAYlC,EAAZkC,OAChB,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZE,EAAOC,OAEVN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZE,EAAOE,SAASC,IAAI,SAACC,EAASC,GAAV,OACnBV,EAAAC,EAAAC,cAACS,EAAD,CAAaC,IAAKF,EAAOtC,QAASqC,EAASpC,gBAAiBgC,EAAOQ,6BCVvEC,EAAiB,CACrBR,MAAS,gBACTO,sBAAyB,EACzBN,SAAY,IAmBCQ,EAhBH,SAAA5C,GAAkB,IAAhB6C,EAAgB7C,EAAhB6C,WAAgB1C,EACAC,mBAASuC,GADTtC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrB+B,EADqB7B,EAAA,GACbyC,EADazC,EAAA,GAS5B,OANAmB,oBAAU,WACRR,MAAM6B,GACHxB,KAAK,SAAA0B,GAAG,OAAIA,EAAIC,SAChB3B,KAAK,SAAA4B,GAAQ,OAAIH,EAAUxC,OAAA4C,EAAA,EAAA5C,CAAA,GAAIqC,EAAmBM,OACpDJ,GAGDhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoB,EAAD,CAASjB,OAAQA,MChBvBkB,IAASC,OAAOxB,EAAAC,EAAAC,cAACuB,EAAD,CAAKT,WAAW,kBAAmBU,SAASC,eAAe","file":"static/js/main.dd098346.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './ServiceTile.css'\n\nconst STATUS = {\n  unknown: \"UNKNOWN\",\n  healthy: \"HEALTHY\",\n  unhealthy: \"UNHEALTHY\"\n}\n\nconst ServiceTile = ({details, pollingInterval}) => {\n  const [status, setStatus] = useState(STATUS.unknown)\n\n  function refreshServiceStatus() {\n    console.log(\"Refreshing status for service:\" + details.name)\n\n    const onSuccess = (result) => {\n      console.log(\"Setting status as healthy for service: \" + details.name)\n      setStatus(STATUS.healthy)\n    }\n    const onFailure = (error) => {\n      console.log(\"Setting status as unhealthy for service: \" + details.name)\n      console.log(\"error: \" + error)\n      setStatus(STATUS.unhealthy)\n    }\n    fetch(details.url, {method: details.method, mode: \"no-cors\", credentials: \"omit\"})\n      .then(onSuccess, onFailure)\n      .catch(onFailure)\n  }\n\n  useEffect(() => {\n    refreshServiceStatus()\n\n    const interval = window.setInterval(() => {\n      refreshServiceStatus()\n    }, pollingInterval * 60 * 1000)\n\n    return () => window.clearInterval(interval)\n  }, [details])\n\n  return (\n    <div className={\n      \"service-tile\"\n      + (status === STATUS.healthy ? \" service-tile--healthy\" : \"\")\n      + (status === STATUS.unhealthy ? \" service-tile--unhealthy\" : \"\")\n    }>\n      <div className=\"service__name\">\n        {details.name}\n      </div>\n      <div className=\"service__url\">\n        {details.url}\n      </div>\n    </div>\n  )\n}\n\nexport default ServiceTile","import React from 'react'\nimport './Monitor.css'\nimport ServiceTile from \"../ServiceTile/ServiceTile\"\n\nconst Monitor = ({config}) => {\n  return (\n    <div className=\"monitor\">\n      <div className=\"monitor__header\">\n        {config.title}\n      </div>\n      <div className=\"monitor__details\">\n      </div>\n      <div className=\"monitor__services\">\n        {config.services.map((service, index) => (\n          <ServiceTile key={index} details={service} pollingInterval={config.pollingIntervalInMins}/>)\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Monitor","import React, {useState, useEffect} from 'react'\nimport './App.css'\nimport Monitor from './Monitor/Monitor'\n\nconst DEFAULT_CONFIG = {\n  \"title\": \"Default title\",\n  \"pollingIntervalInMins\": 5,\n  \"services\": []\n}\n\nconst App = ({configPath}) => {\n  const [config, setConfig] = useState(DEFAULT_CONFIG)\n\n  useEffect(() => {\n    fetch(configPath)\n      .then(res => res.json())\n      .then(response => setConfig({...DEFAULT_CONFIG, ...response}))\n  }, configPath)\n\n  return (\n    <div className=\"App\">\n      <Monitor config={config}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App configPath=\"./config.json\"/>, document.getElementById('root'));"],"sourceRoot":""}